#!/usr/bin/php
<?php

use Radion\Radion;

if (is_file(__DIR__.'/../autoload.php')) {
    include_once  __DIR__.'/../autoload.php';
} elseif (is_file(__DIR__.'/vendor/autoload.php')) {
    include_once __DIR__ . '/vendor/autoload.php';
}


/**
 * @require libraries
 * mpv
 */

$envs = [
    "PID_PATH" => __DIR__ . "/pid",
    "LISTS_PATH" => __DIR__ . "/lists.json",
    "DB_PATH" => __DIR__ . "/db.json"
];


$action = $argv[1] ?? null;

$radion = new Radion($envs);

switch ($action) {
    case 'play':
    case 'start':
        $radion->play();
        break;

    case 'stop':
        $radion->stop();
        break;

    case 'next':
        $radion->next();
        break;

    case 'prev':
        $radion->prev();
        break;

    case 'add':
        $pathLists = $envs['LISTS_PATH'];
        $resource = $argv[2] ?? throw new RuntimeException('');
        $title = $argv[3] ?? null;

        add($pathLists, $resource, $title);
        break;

    case 'remove':

        break;

    case 'lists':
        printLists($radion->getAllLists());
        break;
    default:
        help();
        break;
}


function help()
{
    print_n(<<<HELP
    
    Name:
        radion - multi-function player for songs
    
    Description:     
        radion - it is multi-functional player for play song from resources (Youtube, files, etc)
    
    Examples:
    
    "radion play|start" - play song  
    "radion stop" - stop current playing song  
    "radion next" - play next song  
    "radion prev" - play prev song
    
    Author:
        Rahman Dikaev
    HELP
    );
}


function add(string $pathLists, string $resource, ?string $title)
{
    $listContent = (array) json_decode(file_get_contents($pathLists));

    // Check on exists this resource ($resource)
    $duplicate = scanForDuplicate($resource, $listContent);

    // If exists duplicate of resource, then error
    if ($duplicate) {
        throw new RuntimeException('Такая песня уже есть в lists.json');
    }

    $newContent = [...$listContent, [$resource, $title]];

    file_put_contents($pathLists, json_encode($newContent));
}


function scanForDuplicate(string $resource, array $content): bool
{
    foreach ($content as $item) {
        if ($item[0] === $resource) {
            return true;
        }
    }

    return false;
}
